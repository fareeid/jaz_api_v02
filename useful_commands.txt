-------------Powershell Commnand-----------
Environment variables
$Env:windir    --------------View
$Env:Foo = 'An example'  ----------create
$Env:MyTestEnvVariable = $null  -------delete
https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.3 ---------More info
ni app/main.py requirements.txt

-------------Docker--------------
docker --version                                                                                                                         
docker-compose --version                                                                                                                 
docker-compose logs -f                                                                                                                   
docker-compose -f docker-compose.prod.yml up -d --build
docker-compose exec db psql --username=jaz_api_v02 --dbname=jaz_api_v02
docker-compose exec web alembic init -t async migrations                                                          
docker-compose exec web alembic revision --autogenerate -m "init"  
docker-compose exec web alembic upgrade head  
docker-compose exec web alembic downgrade base
docker-compose exec web alembic stamp base
docker-compose down -v                                                                                            
docker-compose -f docker-compose.yml down -v                                                                      
docker-compose up -d --build                                                                                      
docker inspect                                                                                                    
docker inspect f            
docker-compose exec web aerich init -t app.db.TORTOISE_ORM
docker-compose exec web aerich init-db
docker-compose exec web-db psql -U postgres                                                                                      

--------------Poetry--------------
poetry --info
poetry init                                                                                                       
poetry install                                                                                                    
poetry list                                                                                                       
poetry help add                                                                                                   
poetry update all                                                                                                 
poetry update pydantic                                                                                            
poetry add sqlalchemy                                                                                             
poetry add fastapi-users[sqlalchemy]                                                                              
poetry show                                                                                                       
poetry add alembic                                                                                                                                                                                  
poetry add --group dev mypy                                                                                             

-------------pip----------                                                                                                                            
pip install --no-deps ormar   
pip uninstall ormar                                                                                               
pip list                                                                                                          

-------------Git--------------
git version                                                                                                       
git init                                                                                                          
git add .                                                                                                         
git commit -m "Initial setup of jaz_api_v02"                                                                      
git remote add origin https://github.com/fareeid/jaz_api_v02.git                                                  
git branch -M main                                                                                                
git push -u origin main                                                                                           
git status                                                                                                        
git config --global user.email "faridkim@gmail.com"                                                               
git config --global user.name "Fareeid"                                                                           
git clone https://github.com/fareeid/jaz_api_v02.git

--------------Fastapi--------------
uvicorn app.main:app --reload --port=8001

--------------Conda commands-----------
cd C:\ProgramData\miniconda3\condabin>
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted
./conda init powershell -- then Restart the Powershell
conda deactivate                                                                                                  
conda remove help                                                                                                 
conda env remove --name jaz_api_v0.2                                                                              
conda deactivate                                                                                                  
conda create --name jaz_api_v0.2 python=3.11                                                                      
conda activate jaz_api_v0.2                                                                                       


psql -d database -U user -W	--------------- Connects to a database under a specific user	-d: used to state the database name -U:used to state the database user
psql -h host -d database -U user -W	--------------- Connect to a database that resides on another host	-h: used to state the host -d: used to state the database name -U:used to state the database user
psql -U user -h host “dbname=db sslmode=require”	--------------- Use SSL mode for the connection	-h: used to state the host -U:used to state the database user
\c dbname	--------------- Switch connection to a new database	 
\l	--------------- List available databases	 
\dt	--------------- List available tables	 
\d table_name	--------------- Describe a table such as a column, type, modifiers of columns, etc.	 
\dn	--------------- List all schemes of the currently connected database	 
\df	--------------- List available functions in the current database	 
\dv	--------------- List available views in the current database	 
\du	--------------- List all users and their assign roles	 
SELECT version();	--------------- Retrieve the current version of PostgreSQL server	 
\g	--------------- Execute the last command again	 
\s	--------------- Display command history	 
\s filename	--------------- Save the command history to a file	 
\i filename	--------------- Execute psql commands from a file	 
\?	--------------- Know all available psql commands	 
\h	--------------- Get help	Eg:to get detailed information on ALTER TABLE statement use the \h ALTER TABLE
\e	--------------- Edit command in your own editor	 
\a	--------------- Switch from aligned to non-aligned column output	 
\H	--------------- Switch the output to HTML format	 
\q	--------------- Exit psql shell                                             

